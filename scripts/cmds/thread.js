this.config = {
	name: "thread",
	version: "1.0.6",
	author: {
		name: "NTKhang",
		contacts: ""
	},
	cooldowns: 5,
	role: 2,
	shortDescription: "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏ä‡∏ó",
	longDescription: "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏ä‡∏ó‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏≠‡∏ó",
	category: "owner",
	guide: "{prefix}thread [find | -f | search | -s] <‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤>: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏ä‡∏ó‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏ó‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠"
		+ "\n"
		+ "\n{prefix}thread [ban | -b] [<id> | ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤] <reason>: ‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏ö‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ id <id> ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ bot"
		+ "\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ä‡πà‡∏ô:"
		+ "\n{prefix}thread ban 3950898668362484 spam bot"
		+ "\n{prefix}thread ban spam ‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ"
		+ "\n"
		+ "\n{prefix}thread unban [<id> | ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏ß‡πâ] ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏•‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ id <id>"
    + "\n ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô"
};

module.exports = {
	config: this.config,
	start: async function ({ api, args, threadsData, message, client, event }) {
		const moment = require("moment-timezone");
		const type = args[0];
		// find thread
		if (["find", "search", "-f", "-s"].includes(type)) {
			const allThread = await threadsData.getAll(["name"]);
			const keyword = args.slice(1).join(" ");
			const result = allThread.filter(item => (item.name || "").toLowerCase().includes(keyword.toLowerCase()));
			const msg = result.reduce((i, user) => i += `\n‚ï≠Name: ${user.name}\n‚ï∞ID: ${user.id}`, "");
			message.reply(result.length == 0 ? `‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÉ‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î: ${keyword}` : `üîé‡∏°‡∏µ ${result.length} ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç "${keyword}":\n${msg}`);
		}
		// ban thread
		else if (["ban", "-b"].includes(type)) {
			let id, reason;
			if (!isNaN(args[1])) {
				id = args[1];
				reason = args.slice(2).join(" ");
			}
			else {
				id = event.threadID;
				reason = args.slice(1).join(" ");
			}
			if (!id || !reason) return message.SyntaxError();
			reason = reason.replace(/\s+/g, ' ');
			if (!client.allThreadData[id]) return message.reply(`‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™ ${id} ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏ó`);
			const threadData = await threadsData.getData(id);
			const name = threadData.name;
			const status = threadData.banned.status;

			if (status) return message.reply(`‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™ [${id} | ${name}] ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ:\n> ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${threadData.banned.reason}\n> ‡πÄ‡∏ß‡∏•‡∏≤: ${threadData.banned.date}`);
			const time = moment.tz("Asia/Bangkok").format("DD/MM/YYYY HH:mm:ss");

			await threadsData.setData(id, {
				banned: {
					status: true,
					reason,
					date: time
				}
			}, (err) => {
				if (err) return message.reply(`‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î! ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á ${err.name}: ${err.message}`);
				else return message.reply(`‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏´‡πâ‡∏≤‡∏°‡∏ñ‡∏∑‡∏≠ id [${id} | ${name}] ‡πÉ‡∏ä‡πâ‡∏ö‡∏≠‡∏ó.\n> ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${reason}\n> ‡πÄ‡∏ß‡∏•‡∏≤: ${time}`);
			});
		}
		// unban thread
		else if (["unban", "-u"].includes(type)) {
			let id;
			if (!isNaN(args[1])) id = args[1];
			else id = event.threadID;
			if (!id) return message.SyntaxError();
			if (!client.allThreadData[id]) return message.reply(`‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™ ${id} ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏ó`);

			const threadData = await threadsData.getData(id);
			const name = threadData.name;
			const status = threadData.banned.status;

			if (!status) return message.reply(`‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ñ‡∏∑‡∏≠ id [${id} | ${name}] ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏≠‡∏ó`);
			await threadsData.setData(id, {
				banned: {
					status: false,
					reason: null
				}
			}, (err, data) => {
				if (err) return message.reply(`‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î! ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á ${err.name}: ${err.message}`);
				else message.reply(`‡πÄ‡∏•‡∏¥‡∏Å‡πÅ‡∏ö‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ id [${id} | ${name}], ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏ö‡∏≠‡∏ó‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß`);
			});
		}
		// info thread
		else if (["info", "-i"].includes(type)) {
			let id;
			if (!isNaN(args[1])) id = args[1];
			else id = event.threadID;
			if (!id) return message.SyntaxError();
			if (!client.allThreadData[id]) return message.reply(`‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™ ${id} ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏ó`);
			const threadData = await threadsData.getData(id);
			const valuesMember = Object.values(threadData.members).filter(item => item.inGroup);
			const msg = `> Thread ID: ${threadData.id}`
				+ `\n> Name: ${threadData.name}`
				+ `\n> Create Date: ${moment(threadData.data.createDate).tz("Asia/Bangkok").format("DD/MM/YYYY HH:mm:ss")}`
				+ `\n> ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${valuesMember.length}`
				+ `\n> ‡∏ä‡∏≤‡∏¢: ${valuesMember.filter(item => item.gender == "MALE").length} ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å`
				+ `\n> ‡∏´‡∏ç‡∏¥‡∏á: ${valuesMember.filter(item => item.gender == "FEMALE").length} ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å`
				+ `\n> ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${valuesMember.reduce((i, item) => i += item.count, 0)}`
				+ `\n- Banned: ${threadData.banned.status}`
				+ `\n- Reason: ${threadData.banned.reason}`
				+ `\n- Time: ${threadData.banned.date}`;
			return message.reply(msg);
		}
		else return message.SyntaxError();
	}
};